#services:
#  account-service:
#    image: account-service
#    build:
#      context: .
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-container:5432/accounts  # Подключение к существующему контейнеру
#      SPRING_DATASOURCE_USERNAME: network
#      SPRING_DATASOURCE_PASSWORD: dreamteam777*
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-docker-kafka-1:9092  # Подключение к Kafka
#      SPRING_FLYWAY_ENABLED: "true"
#      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
#      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
#    networks:
#      - kafka-docker_default
#      - microservice-network
#      - teamcity_default
#
#networks:
#  kafka-docker_default:
#    external: true
#  microservice-network:
#    external: true
#  teamcity_default:
#    external: true


#services:
#  zookeeper:
#    image: zookeeper:3.8.0
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#    networks:
#      - kafka-docker_default
#      - microservice-network
#      - teamcity_default
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_BROKER_ID: 1
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    networks:
#      - kafka-docker_default
#      - microservice-network
#      - teamcity_default
#
#  account-service:
#    image: account-service
#    build:
#      context: .
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-container:5432/accounts
#      SPRING_DATASOURCE_USERNAME: network
#      SPRING_DATASOURCE_PASSWORD: dreamteam777*
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092  # Подключение к Kafka
#      SPRING_FLYWAY_ENABLED: "true"
#      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
#      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
#    networks:
#      - kafka-docker_default
#      - microservice-network
#      - teamcity_default
#
#networks:
#  kafka-docker_default:
#    external: true
#  microservice-network:
#    external: true
#  teamcity_default:
#    external: true



services:
  zookeeper:
    image: zookeeper:3.8.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-docker_default
      - microservice-network
      - teamcity_default

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-docker_default
      - microservice-network
      - teamcity_default

  account-service:
    image: account-service
    build:
      context: .
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-container:5432/accounts
      SPRING_DATASOURCE_USERNAME: network
      SPRING_DATASOURCE_PASSWORD: dreamteam777*
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092  # Подключение к Kafka
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
    networks:
      - kafka-docker_default
      - microservice-network
      - teamcity_default

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092
      CONTROL_CENTER_ZOOKEEPER: zookeeper:2181
      CONTROL_CENTER_LISTENERS: http://0.0.0.0:9021
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_MONITORING_INTERVAL: 10
      CONTROL_CENTER_LOG4J_LOGGERS: "org.apache.kafka=DEBUG"
    networks:
      - kafka-docker_default
      - microservice-network
      - teamcity_default

networks:
  kafka-docker_default:
    external: true
  microservice-network:
    external: true
  teamcity_default:
    external: true



